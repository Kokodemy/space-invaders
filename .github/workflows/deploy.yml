name: deploy_to_heroku
on:
  push:
    tags:
      - "v*"
permissions:
  contents: write

jobs:
  build_and_release:
    strategy:
      fail-fast: false
      matrix:
        go: [1.21]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    name: Deploy Space Invaders to Heroku
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install git-crypt and decrypt repository
        env:
          GIT_CRYPT_KEY: ${{ secrets.GIT_CRYPT_KEY }}
        run: |
          sudo apt-get update && \
          sudo apt-get install -y git-crypt && \
          echo "$GIT_CRYPT_KEY" | base64 -d | git-crypt unlock - && \
          git-crypt status -e

      - name: Install go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go }}

      - name: Export Module Name
        id: export_module_name
        run: echo "MODULE_NAME=$(go mod edit -json | jq -r '.Module.Path')" >> "$GITHUB_OUTPUT"

      - name: Install go tools
        run: |
          go install golang.org/x/tools/gopls@latest && \
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest

      - name: Run linters and tests
        run: |
          gofmt -s -d ./ && \
          golangci-lint run -v --timeout 5m && \
          go test -v -race ./...

      - name: Get app url
        uses: akhileshns/heroku-deploy@v3.13.15
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ""
          heroku_email: ${{ secrets.HEROKU_USER_EMAIL }}
          justlogin: true

      - name: Export app url
        id: export_app_url
        run: |
          echo "HEROKU_APP_URL=$(heroku apps:info --app=${{ secrets.HEROKU_APP_NAME }} --json | jq -r '.app.web_url | rtrimstr("/")')" >> "$GITHUB_OUTPUT"

      - name: Fetch score board
        id: fetch_score_board
        run: |
          curl -L -X GET "${{ steps.export_app_url.outputs.HEROKU_APP_URL }}/scores.db" -H "Accept: application/json" | sed 's/^[^;]*;//' > scores.json
        continue-on-error: true

      - name: Deploy to Heroku
        uses: akhileshns/heroku-deploy@v3.13.15
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
          heroku_email: ${{ secrets.HEROKU_USER_EMAIL }}
          healthcheck: "${{ steps.export_app_url.outputs.HEROKU_APP_URL }}/health"
          rollbackonhealthcheckfailed: true
          usedocker: true
          delay: 5
        env:
          HD_SPACE_INVADERS_COLLISION_DETECTION_VERSION: "3"
          HD_SPACE_INVADERS_DEBUG: "false"
          HD_SPACE_INVADERS_FORCE_SECURE: "true"
          HD_SPACE_INVADERS_GOD_MODE: "false"

      - name: Update code documentation
        run: curl -fsSL https://proxy.golang.org/${{ steps.export_module_name.outputs.MODULE_NAME }}/@v/${{ github.ref_name }}.info

      - name: Update score board
        run: |
          token=$(./src/jwt.sh -k ./secret/private_key.pem) && \
          curl -L -X POST "${{ steps.export_app_url.outputs.HEROKU_APP_URL }}/scores.db" -d @scores.json -H "Content-Type: application/json" -H "Authorization: Bearer $token"
        if: steps.fetch_score_board.outcome == 'success'
